{"version":3,"sources":["images/space-bg2.jpg","images/space-bg.jpg","components/Logo/Logo.tsx","components/AboutApp/AboutAppDesc.ts","components/AboutApp/AboutApp.tsx","store/actions/userAction.ts","store/types/index.ts","components/LoginDesk/LoginDesk.tsx","components/Board/Message/Message.tsx","components/Board/NoLogged/NoLogged.tsx","components/Board/Board.tsx","components/LoggedUserProfile/LoggedUserProfile.tsx","components/Users/Users.tsx","components/Desk/Desk.tsx","components/MenuIcon/MenuIcon.tsx","store/actions/menuAction.ts","components/Menu/Menu.tsx","App.tsx","serviceWorker.ts","store/reducers/menuReducer.ts","store/reducers/userReducer.ts","store/reducers/index.ts","store/index.ts","index.tsx"],"names":["module","exports","Logo","className","welcomeUnlogged","likeSocialMedia","AboutApp","loggedUser","name","isLogged","style","fontSize","color","setLoginUser","type","setUserDetails","id","img","friends","accounts","ACCOUNTS","LoginDesk","useState","loginValue","setLoginValue","passwordValue","setPasswordValue","loginError","setLoginError","dispatch","useDispatch","handleSubmitLogin","e","preventDefault","loginResult","login","password","getUser","find","user","correctPassword","tryToLog","setTimeout","onSubmit","disabled","value","onChange","target","renderMessages","text","map","mess","index","key","backgroundImage","Message","NoLogged","to","Board","LoggedUserProfile","getFriends","friendID","renderFriends","friend","onClick","friendToDeleteID","deleteUserFromFriends","length","Users","renderUsersList","filter","isInLoggedUserList","includes","newFriendID","Desk","useSelector","state","path","exact","render","component","MenuIcon","menuVisibility","menu","visibility","topAnimation","centerAnimation","bottomAnimation","SpaceBgImage","SpaceBG","defaultUserState","Menu","userIsLogged","menuLoad","setMenuLoad","animation","spaceBgImage","App","Boolean","window","location","hostname","match","INITIAL_STATE","rootReducer","combineReducers","action","listWithoutDeletedFriend","store","createStore","composeWithDevTools","ReactDOM","StrictMode","basename","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e2bef9e1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/space-bg2.b22799e8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/space-bg.2c7ebd72.jpg\";","import React from \"react\";\nimport \"./Logo.scss\";\n\nexport const Logo: React.FC = () => (\n  <h1 className=\"logo\">\n    Space<i className=\"logo__rocket fas fa-space-shuttle\"></i>\n  </h1>\n);\n","const loggedDesc = {\n  welcomeLogged: \"Cieszymy się, że znów jesteś z nami!\",\n};\n\nconst unloggedDesc = {\n  welcomeUnlogged:\n    \"Space to przestrzeń dla Ciebie i Twoich znajomych! Zaloguj się aby zarządzać listą znajomych, sprawdzić tablicę aktualności czy zareagować na komentarz znajomego.\",\n  likeSocialMedia: `Aktualnie aplikacja jest swego rodzaju stymulacją prawdziwej strony\n   \"social media\".`,\n  letsTestIt: \"Chcesz wytestować aplikację? Zaloguj się na konto testowe.\",\n  login: \"Login: test\",\n  password: \"Hasło: test\",\n  notSave: \"Wszelkie zmiany nie zostaną zapisane.\",\n};\n\nexport const { welcomeLogged } = loggedDesc;\n\nexport const {\n  welcomeUnlogged,\n  likeSocialMedia,\n  letsTestIt,\n  login,\n  password,\n  notSave,\n} = unloggedDesc;\n","import React from \"react\";\nimport \"./AboutApp.scss\";\nimport {\n  welcomeLogged,\n  welcomeUnlogged,\n  letsTestIt,\n  login,\n  password,\n  likeSocialMedia,\n  notSave,\n} from \"./AboutAppDesc\";\n\nexport const AboutApp: React.FC<AboutAppProps> = ({ loggedUser }) => (\n  <section className=\"about-app\">\n    <h1 className=\"about-app__title\"> Witaj, {loggedUser.name}!</h1>\n    <p className=\"about-app__desc\">\n      {loggedUser.isLogged ? welcomeLogged : welcomeUnlogged}\n    </p>\n    <p className=\"about-app__desc\">{likeSocialMedia}</p>\n    {/* <p className=\"about-app__desc\">{loggedUser.isLogged ? null : letsTestIt}</p> */}\n    {/* <p className=\"about-app__desc\">{loggedUser.isLogged ? null : login}</p> */}\n    {/* <p className=\"about-app__desc\">{loggedUser.isLogged ? null : password}</p> */}\n    {/* <p className=\"about-app__desc\">{notSave}</p> */}\n\n    {/* DO USUNIĘCIA */}\n    <p\n      className=\"about-app__desc\"\n      style={{ fontSize: \"30px\", color: \"yellowgreen\" }}\n    >\n      <i className=\"fas fa-exclamation-triangle\"></i> Strona w budowie!{\" \"}\n      <i className=\"fas fa-exclamation-triangle\"></i>\n    </p>\n  </section>\n);\n\nexport interface AboutAppProps {\n  loggedUser: {\n    isLogged: boolean;\n    name: string;\n  };\n}\n","import {\n  SET_LOGIN_USER,\n  SET_USER_DETAILS,\n  ADD_USER_TO_FRIENDS,\n  DELETE_USER_FROM_FRIENDS,\n} from \"./../types\";\n\nexport const setLoginUser = (isLogged: boolean) => ({\n  type: SET_LOGIN_USER,\n  isLogged: isLogged,\n});\n\nexport const setUserDetails = ({ id, name, img, friends }: User) => ({\n  type: SET_USER_DETAILS,\n  id: id,\n  name: name,\n  img: img,\n  friends: friends,\n});\n\nexport const addUserToFriends = (newFriendID: number) => ({\n  type: ADD_USER_TO_FRIENDS,\n  newFriendID: newFriendID,\n});\n\nexport const deleteUserFromFriends = (friendToDeleteID: number = -1) => ({\n  type: DELETE_USER_FROM_FRIENDS,\n  friendToDeleteID: friendToDeleteID,\n});\n\ninterface User {\n  id: number;\n  name: string;\n  img: string;\n  friends: number[];\n}\n","export const SHOW_MENU = \"SHOW_MENU\";\nexport const HIDE_MENU = \"HIDE_MENU\";\n\nexport const SET_LOGIN_USER = \"SET_LOGIN_USER\";\nexport const SET_USER_DETAILS = \"SET_USER_DETAILS\";\nexport const ADD_USER_TO_FRIENDS = \"ADD_USER_TO_FRIENDS\";\nexport const DELETE_USER_FROM_FRIENDS = \"DELETE_USER_FROM_FRIENDS\";\n","import React, { useState } from \"react\";\nimport \"./LoginDesk.scss\";\nimport ACCOUNTS from \"./../../accounts.json\";\nimport { setLoginUser, setUserDetails } from \"./../../store/actions/userAction\";\nimport { useDispatch } from \"react-redux\";\n\nconst { accounts } = ACCOUNTS;\n\nexport interface LoginDeskProps {}\n\nconst tryToLog = (\n  login: string,\n  password: string,\n  dispatch: Function\n): boolean => {\n  const getUser = accounts.find((user) => user.login === login);\n  const correctPassword = getUser?.password === password;\n  if (getUser && correctPassword) dispatch(setUserDetails(getUser));\n  return correctPassword;\n};\n\nexport const LoginDesk: React.FC<LoginDeskProps> = () => {\n  const [loginValue, setLoginValue] = useState(\"\");\n  const [passwordValue, setPasswordValue] = useState(\"\");\n  const [loginError, setLoginError] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleSubmitLogin = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const loginResult = tryToLog(loginValue, passwordValue, dispatch);\n    if (loginResult) dispatch(setLoginUser(loginResult));\n    else {\n      setTimeout(() => setLoginError(false), 1500);\n      setLoginError(true);\n    }\n  };\n\n  return (\n    <section className=\"login-desk\">\n      <form\n        className=\"login-desk__wrapper\"\n        onSubmit={(e) => {\n          handleSubmitLogin(e);\n        }}\n      >\n        <label className=\"login-desk__label\">Login</label>\n        <input\n          disabled\n          className=\"login-desk__input\"\n          type=\"text\"\n          value={loginValue}\n          onChange={(e) => setLoginValue(e.target.value)}\n        />\n        <label className=\"login-desk__label\">Hasło</label>\n        <input\n          disabled\n          className=\"login-desk__input\"\n          type=\"password\"\n          value={passwordValue}\n          onChange={(e) => setPasswordValue(e.target.value)}\n        />\n        <button disabled className=\"login-desk__btn\">\n          Zaloguj się\n        </button>\n      </form>\n      {loginError ? (\n        <p className=\"login-desk__login-error\">\n          Błąd logowania. Spróbuj ponownie!\n        </p>\n      ) : null}\n      <p\n        className=\"about-app__desc\"\n        style={{ fontSize: \"30px\", color: \"yellowgreen\" }}\n      >\n        <i className=\"fas fa-exclamation-triangle\"></i> Strona w budowie!{\" \"}\n        <i className=\"fas fa-exclamation-triangle\"></i>\n      </p>\n    </section>\n  );\n};\n","import React from \"react\";\nimport \"./Message.scss\";\nimport ACCOUNTS from \"./../../../accounts.json\";\n\nconst { accounts } = ACCOUNTS;\n\nexport interface MessageProps {}\n\nconst messTemp = [\n  {\n    img: accounts[0].img,\n    name: accounts[0].name,\n    text:\n      \"Cześć wsztyskim! Testowa wiadomość, mam nadzieję, że wszystko działa. Miłego eksplorowania. :)\",\n  },\n  {\n    img: accounts[1].img,\n    name: accounts[1].name,\n    text: \"Hello! :)\",\n  },\n  {\n    img: accounts[5].img,\n    name: accounts[5].name,\n    text: \"Hejo! ;) widać wiadomość?\",\n  },\n  {\n    img: accounts[3].img,\n    name: accounts[3].name,\n    text: \"Cześć, ja widzę. :)\",\n  },\n  {\n    img: accounts[2].img,\n    name: accounts[2].name,\n    text: \"Yo, ja też. ^^\",\n  },\n  {\n    img: accounts[7].img,\n    name: accounts[7].name,\n    text: \"Meow! Meow!\",\n  },\n];\n\nconst renderMessages = messTemp.map((mess, index) => (\n  <div key={index} className=\"message\">\n    <div className=\"message__wrapperIMG\">\n      <div\n        className=\"message__img\"\n        style={{ backgroundImage: `url(${mess.img})` }}\n      ></div>\n      <p className=\"message__user-name\">{mess.name}</p>\n    </div>\n    <p className=\"message__text\">{mess.text}</p>\n  </div>\n));\n\nexport const Message: React.FC<MessageProps> = () => <>{renderMessages}</>;\n","import React from \"react\";\nimport \"./NoLogged.scss\";\nimport { NavLink } from \"react-router-dom\";\n\nexport interface NoLoggedProps {}\n\nexport const NoLogged: React.FC<NoLoggedProps> = () => (\n  <div className=\"no-logged\">\n    <h1 className=\"no-logged__title\">Tylko dla zalogowanych użytkowników</h1>\n    <NavLink className=\"no-logged__btn\" to=\"/login\">\n      Zaloguj się\n    </NavLink>\n  </div>\n);\n","import React from \"react\";\nimport \"./Board.scss\";\nimport { Message } from \"./Message/Message\";\nimport { NoLogged } from \"./NoLogged/NoLogged\";\n\nexport const Board: React.FC<BoardProps> = ({ loggedUser }) => (\n  <section className=\"board\">\n    {loggedUser.isLogged ? <Message /> : <NoLogged />}\n    <p\n      className=\"about-app__desc\"\n      style={{ fontSize: \"30px\", color: \"yellowgreen\" }}\n    >\n      <i className=\"fas fa-exclamation-triangle\"></i> Strona w budowie!{\" \"}\n      <i className=\"fas fa-exclamation-triangle\"></i>\n    </p>\n  </section>\n);\n\nexport interface BoardProps {\n  loggedUser: {\n    isLogged: boolean;\n  };\n}\n","import React from \"react\";\nimport \"./LoggedUserProfile.scss\";\nimport ACCOUNTS from \"./../../accounts.json\";\nimport { deleteUserFromFriends } from \"./../../store/actions/userAction\";\nimport { useDispatch } from \"react-redux\";\n\nconst { accounts } = ACCOUNTS;\n\nexport const LoggedUserProfile: React.FC<LoggedUserProfileProps> = ({\n  loggedUser,\n}) => {\n  const dispatch = useDispatch();\n  const getFriends = loggedUser.friends.map((friendID) =>\n    accounts.find((user) => user.id === friendID)\n  );\n\n  const renderFriends = getFriends.map((friend) => (\n    <div\n      key={friend?.id}\n      className=\"logged-user-profile__friend-img\"\n      style={{ backgroundImage: `url(${friend?.img})` }}\n    >\n      <span className=\"logged-user-profile__friend-name\">{friend?.name}</span>\n      <i\n        onClick={() => dispatch(deleteUserFromFriends(friend?.id))}\n        className=\"fas fa-user-minus logged-user-profile__delete-friend\"\n      ></i>\n    </div>\n  ));\n  return (\n    <section className=\"logged-user-profile\">\n      <div className=\"logged-user-profile__wrapper-name-img\">\n        <h1 className=\"logged-user-profile__name\">{loggedUser.name}</h1>\n        <div\n          className=\"logged-user-profile__img\"\n          style={{\n            backgroundImage: `url(${loggedUser.img ? loggedUser.img : null})`,\n          }}\n        ></div>\n      </div>\n      <div className=\"logged-user-profile__wrapper\">\n        <h2 className=\"logged-user-profile__friends-title\">{`Znajomi (${getFriends.length})`}</h2>\n        <div className=\"logged-user-profile__friend-wrapper\">\n          {renderFriends.length ? (\n            <>\n              {renderFriends}\n              <div className=\"logged-user-profile__last-img-margin-on-mobile\"></div>\n            </>\n          ) : (\n            <span className=\"logged-user-profile__friend-name logged-user-profile__friend-name--no-friend\">\n              Brak znajomych\n            </span>\n          )}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport interface LoggedUserProfileProps {\n  loggedUser: {\n    name: string;\n    img: string;\n    friends: [];\n  };\n}\n","import React from \"react\";\nimport \"./Users.scss\";\nimport ACCOUNTS from \"./../../accounts.json\";\nimport { useDispatch } from \"react-redux\";\nimport { addUserToFriends } from \"./../../store/actions/userAction\";\n\nconst { accounts } = ACCOUNTS;\n\nexport const Users: React.FC<UsersProps> = ({ loggedUser }) => {\n  const dispatch = useDispatch();\n\n  const getListWithoutLoggedUser = accounts.filter(\n    (user) => user.id !== loggedUser.id\n  );\n\n  const renderUsersList = getListWithoutLoggedUser.map((user) => {\n    const isInLoggedUserList = loggedUser.friends.includes(user.id);\n    return (\n      <div key={user.id} className=\"users__wrapper\">\n        <div\n          className=\"users__image\"\n          style={{ backgroundImage: `url(${user.img})` }}\n        ></div>\n        <p className=\"users__name\">{user.name}</p>\n        {isInLoggedUserList ? (\n          <i className=\"fas fa-check users__add-friend-icon users__add-friend-icon--added\"></i>\n        ) : (\n          <i\n            onClick={() => dispatch(addUserToFriends(user.id))}\n            className=\"fas fa-user-plus users__add-friend-icon\"\n          ></i>\n        )}\n      </div>\n    );\n  });\n\n  return <section className=\"users\">{renderUsersList}</section>;\n};\n\nexport interface UsersProps {\n  loggedUser: {\n    id: number;\n    isLogged: boolean;\n    name: string;\n    img: string;\n    friends: number[];\n  };\n}\n","import React from \"react\";\nimport \"./Desk.scss\";\nimport { useSelector } from \"react-redux\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport { AboutApp } from \"./../AboutApp/AboutApp\";\nimport { LoginDesk } from \"./../LoginDesk/LoginDesk\";\nimport { Board } from \"./../Board/Board\";\nimport { LoggedUserProfile } from \"../LoggedUserProfile/LoggedUserProfile\";\nimport { Users } from \"./../Users/Users\";\n\nexport interface DeskProps {}\n\nexport const Desk: React.FC<DeskProps> = () => {\n  const loggedUser = useSelector((state: User) => state.user);\n\n  return (\n    <main className=\"desk\">\n      <Switch>\n        <Route\n          path=\"/\"\n          exact\n          render={() => <AboutApp loggedUser={loggedUser} />}\n        />\n        <Route\n          path=\"/profile\"\n          render={() =>\n            loggedUser.isLogged ? (\n              <LoggedUserProfile loggedUser={loggedUser} />\n            ) : (\n              <Redirect to=\"/login\" />\n            )\n          }\n        />\n        <Route path=\"/board\" render={() => <Board loggedUser={loggedUser} />} />\n        <Route\n          path=\"/users\"\n          render={() =>\n            loggedUser.isLogged ? (\n              <Users loggedUser={loggedUser} />\n            ) : (\n              <Redirect to=\"/login\" />\n            )\n          }\n        />\n        <Route\n          path=\"/login\"\n          render={() =>\n            loggedUser.isLogged ? <Redirect to=\"/\" /> : <LoginDesk />\n          }\n        />\n        <Route component={() => <div style={{ color: \"white\" }}>BŁĄD</div>} />\n      </Switch>\n    </main>\n  );\n};\n\ninterface User {\n  user: {\n    id: number;\n    isLogged: boolean;\n    name: string;\n    img: string;\n    friends: [];\n  };\n}\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { hideMenu, showMenu } from \"./../../store/actions/menuAction\";\nimport \"./MenuIcon.scss\";\n\nexport const MenuIcon: React.FC<MenuIconProps> = ({ dispatch }) => {\n  const menuVisibility = useSelector((state: Menu) => state.menu.visibility);\n\n  const topAnimation = menuVisibility\n    ? \"menu-icon__bar--top-animation\"\n    : \"menu-icon__bar--top-animationBack\";\n  const centerAnimation = menuVisibility\n    ? \"menu-icon__bar--center-animation\"\n    : \"\";\n  const bottomAnimation = menuVisibility\n    ? \"menu-icon__bar--bottom-animation\"\n    : \"menu-icon__bar--bottom-animationBack\";\n\n  return (\n    <div\n      className=\"menu-icon\"\n      onClick={() => {\n        if (menuVisibility) dispatch(hideMenu());\n        else dispatch(showMenu());\n      }}\n    >\n      <span\n        className={`menu-icon__bar menu-icon__bar--top ${topAnimation}`}\n      ></span>\n      <span\n        className={`menu-icon__bar menu-icon__bar--center ${centerAnimation}`}\n      ></span>\n      <span\n        className={`menu-icon__bar menu-icon__bar--bottom ${bottomAnimation}`}\n      ></span>\n    </div>\n  );\n};\n\nexport interface MenuIconProps {\n  dispatch: Function;\n}\n\ninterface Menu {\n  menu: {\n    visibility: boolean;\n  };\n}\n","import { HIDE_MENU, SHOW_MENU } from \"./../types\";\n\nexport const showMenu = () => {\n  return {\n    type: SHOW_MENU,\n    visibility: true,\n  };\n};\n\nexport const hideMenu = () => {\n  return {\n    type: HIDE_MENU,\n    visibility: false,\n  };\n};\n","import React, { useState } from \"react\";\nimport \"./Menu.scss\";\nimport { useSelector } from \"react-redux\";\nimport SpaceBG from \"./../../images/space-bg.jpg\";\nimport { NavLink } from \"react-router-dom\";\nimport { hideMenu } from \"./../../store/actions/menuAction\";\nimport { setLoginUser, setUserDetails } from \"./../../store/actions/userAction\";\n\nconst SpaceBgImage = { backgroundImage: `url(${SpaceBG})` };\n\nconst defaultUserState = {\n  id: 0,\n  name: \"Nieznajomy\",\n  img: \"\",\n  friends: [],\n};\n\nexport const Menu: React.FC<MenuProps> = ({ dispatch }) => {\n  const menuVisibility = useSelector((state: Menu) => state.menu.visibility);\n  const userIsLogged = useSelector((state: User) => state.user.isLogged);\n  const [menuLoad, setMenuLoad] = useState(false);\n  const animation = menuVisibility ? \"menu--show\" : \"menu--hide\";\n\n  if (menuVisibility && !menuLoad) setMenuLoad(true);\n\n  return (\n    <nav className={`menu ${menuLoad ? animation : \"\"}`} style={SpaceBgImage}>\n      <ul className=\"menu__container\">\n        <NavLink\n          className=\"menu__link\"\n          to=\"/\"\n          exact\n          onClick={() => dispatch(hideMenu())}\n        >\n          O aplikacji\n        </NavLink>\n\n        {userIsLogged ? (\n          <NavLink\n            className=\"menu__link\"\n            to=\"/profile\"\n            onClick={() => dispatch(hideMenu())}\n          >\n            Profil\n          </NavLink>\n        ) : null}\n\n        <NavLink\n          className=\"menu__link\"\n          to=\"/board\"\n          onClick={() => dispatch(hideMenu())}\n        >\n          Tablica\n        </NavLink>\n\n        {userIsLogged ? (\n          <NavLink\n            className=\"menu__link\"\n            to=\"/users\"\n            onClick={() => dispatch(hideMenu())}\n          >\n            Użytkownicy\n          </NavLink>\n        ) : null}\n\n        {userIsLogged ? (\n          <NavLink\n            className=\"menu__link\"\n            to=\"/login\"\n            onClick={() => {\n              dispatch(hideMenu());\n              dispatch(setLoginUser(false));\n              dispatch(setUserDetails(defaultUserState));\n            }}\n          >\n            Wyloguj\n          </NavLink>\n        ) : (\n          <NavLink\n            className=\"menu__link\"\n            to=\"/login\"\n            onClick={() => dispatch(hideMenu())}\n          >\n            Logowanie\n          </NavLink>\n        )}\n      </ul>\n    </nav>\n  );\n};\n\nexport interface MenuProps {\n  dispatch: Function;\n}\n\ninterface Menu {\n  menu: {\n    visibility: boolean;\n  };\n}\n\ninterface User {\n  user: {\n    isLogged: boolean;\n  };\n}\n","import React from \"react\";\nimport SpaceBG from \"./images/space-bg2.jpg\";\nimport \"./App.scss\";\nimport { Logo } from \"./components/Logo/Logo\";\nimport { Desk } from \"./components/Desk/Desk\";\nimport { MenuIcon } from \"./components/MenuIcon/MenuIcon\";\nimport { Menu } from \"./components/Menu/Menu\";\nimport { useDispatch } from \"react-redux\";\n\nconst spaceBgImage = { backgroundImage: `url(${SpaceBG})` };\n\nexport const App = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <div className=\"app\" style={spaceBgImage}>\n      <MenuIcon dispatch={dispatch} />\n      <Logo />\n      <Desk />\n      <Menu dispatch={dispatch} />\n    </div>\n  );\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { HIDE_MENU, SHOW_MENU } from \"./../types\";\n\nconst INITIAL_STATE = {\n  visibility: false,\n};\n\nexport const menuReducer = (state = INITIAL_STATE, action: Action) => {\n  switch (action.type) {\n    case SHOW_MENU:\n      return { ...state, visibility: action.visibility };\n    case HIDE_MENU:\n      return { ...state, visibility: action.visibility };\n    default:\n      return state;\n  }\n};\n\ninterface Action {\n  type: string;\n  visibility: boolean;\n}\n","import {\n  SET_LOGIN_USER,\n  SET_USER_DETAILS,\n  ADD_USER_TO_FRIENDS,\n  DELETE_USER_FROM_FRIENDS,\n} from \"./../types\";\n\nconst INITIAL_STATE = {\n  id: 0,\n  isLogged: false,\n  name: \"Nieznajomy\",\n  img: \"\",\n  friends: [],\n};\n\nexport const userReducer = (state = INITIAL_STATE, action: Action) => {\n  switch (action.type) {\n    case SET_LOGIN_USER:\n      return {\n        ...state,\n        isLogged: action.isLogged,\n      };\n    case SET_USER_DETAILS:\n      return {\n        ...state,\n        id: action.id,\n        name: action.name,\n        img: action.img,\n        friends: action.friends,\n      };\n    case ADD_USER_TO_FRIENDS:\n      return {\n        ...state,\n        friends: [...state.friends, action.newFriendID],\n      };\n    case DELETE_USER_FROM_FRIENDS:\n      const listWithoutDeletedFriend = state.friends.filter(\n        (friend) => friend !== action.friendToDeleteID\n      );\n      return {\n        ...state,\n        friends: listWithoutDeletedFriend,\n      };\n    default:\n      return state;\n  }\n};\n\ninterface Action {\n  type: string;\n  id: number;\n  isLogged: boolean;\n  name: string;\n  img: string;\n  friends: number[];\n  newFriendID: number;\n  friendToDeleteID: number;\n}\n","import { combineReducers } from \"redux\";\nimport { menuReducer } from \"./menuReducer\";\nimport { userReducer } from \"./userReducer\";\n\nexport const rootReducer = combineReducers({\n  menu: menuReducer,\n  user: userReducer,\n});\n","import { createStore } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { rootReducer } from \"./reducers/\";\n\nexport const store = createStore(rootReducer, composeWithDevTools());\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport { App } from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./store\";\nimport { HashRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter basename=\"/\">\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}